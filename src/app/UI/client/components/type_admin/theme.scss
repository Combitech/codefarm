
@import "react-toolbox/components/colors";
@import "react-toolbox/components/globals";
@import "react-toolbox/components/mixins";
@import "~ui-styles/colors";

.pager {
    margin-left: auto;
    margin-right: auto;
    text-align: center;

    .pagerButton {
        font-size: $font-size-big;
    }
}

.section {
    .listContainer {
        margin: $layout-gutter-width;
    }

    .header {
        padding: $layout-gutter-width-sm * 2;
    }

    .panel {
        padding-right: $layout-gutter-width-sm * 2;

        &:last-child {
            padding-right: 0;
        }

        .title {
            margin-bottom: $layout-gutter-width-sm;

            .titleButton {
                float: right;
                margin-left: $layout-gutter-width-sm;
            }
        }

        .actions {
            margin-bottom: $layout-gutter-width-sm;
        }

        .properties {
            width: 100%;
            font-size: $font-size-small;
            border-spacing: 0;
            margin-bottom: $layout-gutter-width-sm;

            tbody tr:nth-child(odd) {
                background-color: $palette-indigo-50;
            }

            tr {
                border-spacing: 0;
            }

            td {
                padding: $unit $unit * 1.6;
                // Make <Link> left aligned within property table
                a {
                    display: inline;
                }
            }

            td:first-child {
                font-weight: $font-weight-semi-bold;
                white-space: nowrap;
            }

            td:last-child {
                color: $color-text-secondary;
                width: 100%;
            }

            td.monospace {
                font-family: "Roboto Mono";
            }
        }
    }

    .container {
        padding: $layout-gutter-width-sm * 2;
        padding-top: 0;
        color: $color-text;
    }

    .listItemIconContainer {
        width: 3.2 * $unit;
        height: 3.2 * $unit;
        border-radius: 4px;

        .listItemIcon[data-react-toolbox="font-icon"] {
            width: 2.4 * $unit;
            height: 2.4 * $unit;
            display: block;
            // Centered horizontally, works since display is block
            margin-left: auto;
            margin-right: auto;
            // Centered vertically, cannot use vertical-align since display is block
            position: relative;
            top: 50%;
            -webkit-transform: translateY(-50%);
            -ms-transform: translateY(-50%);
            transform: translateY(-50%);
        }
    }

    .list {
        .divider {
            height: .8 * $unit;
        }
    }

    .button {
        float: right;
        margin-left: $layout-gutter-width;
    }

    .dropdown {
        float: right;
        margin-left: $layout-gutter-width;
        margin-top: -2 * $unit;
    }

    .filterInput {
        float: right;
        width: $baseline-grid * 30;
        margin-left: $layout-gutter-width;
        margin-top: -2 * $unit;
    }

    .form {
        margin: $layout-gutter-width;
        margin-top: 0;

        .card {
            padding: $layout-gutter-width;
            width: 100%;
            overflow: visible;
        }

        .buttons {
            margin-left: auto;
        }

        .subtitle {
            font-size: $font-size-small;
            font-weight: $font-weight-normal;
            color: $color-text-secondary;
            padding-bottom: $layout-gutter-width-sm;
            padding-top: $layout-gutter-width;
        }

        .monospaceInput {
            .inputElement {
                font-family: "Roboto Mono";
            }
        }

        .longDescription {
            font-weight: $font-weight-normal;
            font-size: $font-size-small;
            color: $color-text-secondary;
            // Since description is placed below input element
            // move it a bit upwards...
            margin-top: -$layout-gutter-width-sm / 2;
            margin-bottom: $layout-gutter-width-sm;
        }
    }

    .editTags {
        .delTags {
            .tag {
                background-color: $cf-color-remove;
            }
        }

        .addTags {
            .tag {
                background-color: $cf-color-add;
            }
        }
    }
}

.loading {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    opacity: 0.5;
    z-index: 999;
    text-align: center;
    padding: $layout-gutter-width * 2;

    .progressBar {
        z-index: 1000;
    }
}
