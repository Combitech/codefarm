
@import "react-toolbox/components/colors";
@import "react-toolbox/components/globals";
@import "~ui-styles/colors";

.content {
    margin-left: $baseline-grid * 40;
    margin-top: $standard-increment-desktop;

    .flow {
        padding-bottom: $layout-gutter-width-sm * 2;
    }
}

.revisionListItemContent {
    width: 100%;
    vertical-align: middle;

    .revisionInfo {
        &Comment {
            font-size: $font-size-normal;
            color: $color-text;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        &Legend {
            font-size: $font-size-small;
            color: $color-text-secondary;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }

    .revisionStatusContainer {
        float: right;
        vertical-align: middle;

        .revisionStatus {
            float: right;
            color: white;

            &-success {
                background-color: $cf-color-success;
            }
            &-fail {
                background-color: $cf-color-error;
            }
        }
    }
}

.information {
    width: 95%;
    font-size: $font-size-small;
    margin-bottom: $layout-gutter-width-sm;
    border-spacing: 0;

    tbody tr:nth-child(odd) {
        background-color: $palette-grey-50;
    }

    tr {
        border-spacing: 0;
    }

    td {
        padding: $unit;
        // Make <Link> left aligned within property table
        a {
            display: inline;
        }

        .name {
            font-weight: $font-weight-semi-bold;
            padding-left: $layout-gutter-width-sm / 2;
        }

        .email {
            padding-left: $layout-gutter-width-sm / 2;
        }
    }

    td:first-child {
        font-weight: $font-weight-semi-bold;
    }

    td:last-child {
        color: $color-text-secondary;
    }

    td.monospace {
        font-family: "Roboto Mono";
    }
}

.revisionList {
    width: 100%;
    font-size: 1.3rem;
    margin-bottom: $layout-gutter-width-sm;
    margin-left: -$unit;
    margin-right: -$unit;
    border-spacing: 0;

    tbody {
        &.header {
            font-weight: $font-weight-semi-bold;
        }

        &.title {
            td {
                padding-top: $layout-gutter-width * 2;
            }

            &:first-child td {
                padding-top: 0;
            }
        }

        &.list {
            tr {
                cursor: pointer;
                color: $color-text-secondary;

                &:nth-child(odd) {
                    background-color: $palette-grey-50;
                }

                &:hover {
                    opacity: 0.8;
                }
            }
        }
    }

    td {
        padding: $unit / 2 $unit;
        // Make <Link> left aligned within property table
        a {
            display: inline;
        }

        &.monospace {
            font-family: "Roboto Mono";
        }

        &.runColumn {
            text-align: center;
            width: $unit;
        }

        &.headerRev {
            width: $unit * 10;
        }

        &.headerTime {
            width: $unit * 17;
        }

        &.headerAuthor {
            width: $unit * 30;
        }

        .avatar {
            width: $unit * 2;
            height: $unit * 2;
            margin-right: $unit / 2;
        }
    }

    tr {
        border-spacing: 0;
    }
}

.overviewTable {
    width: 100%;

    td {
        vertical-align: top;
    }

    .avatarCell {
        padding-top: $layout-gutter-width;
        text-align: center;
        width: $baseline-grid * 6;
    }

    .dataCell {
        padding: $layout-gutter-width;
    }

    .avatar {
        margin-bottom: $baseline-grid * 2;
    }

    .icon {
        margin-bottom: $baseline-grid * 2;
        height: 48px;
    }

    .time {
        font-size: $font-size-small;
        font-weight: $font-weight-normal;
        color: $color-text-secondary;
        margin-left: $baseline-grid;
    }

    .title {
        font-size: $font-size-big;
        font-weight: $font-weight-bold;
        margin-bottom: $baseline-grid;
    }

    .description {
        font-size: $font-size-small;
        font-weight: $font-weight-normal;
        color: $color-text-secondary;
        margin-bottom: $baseline-grid;
        padding: $baseline-grid * 2;
        border-left: 4px solid $palette-grey-200;
        white-space: pre-line;
    }

    .commentInput {
        padding: 0;
        padding-bottom: $baseline-grid
    }

    .commentButton {
        float: right;
    }

    .overviewItem {
        .title {
            font-size: $font-size-big;
            font-weight: $font-weight-bold;
            color: $color-primary-dark;
            margin-bottom: $baseline-grid;
        }

        .description {
            font-size: $font-size-small;
            font-weight: $font-weight-normal;
            color: $color-text-secondary;
            margin-bottom: $baseline-grid;
            padding: $baseline-grid * 2;
            border-left: 4px solid $palette-grey-200;
            white-space: pre-line;
        }



        .table {
            font-size: $font-size-small;

            .head {
                font-weight: $font-weight-normal;
                padding-right: $baseline-grid;
                padding-bottom: $baseline-grid;
            }

            .data {
                color: $color-text-secondary;
                padding-bottom: $baseline-grid;
            }
        }
    }
}

.statusIcon {
    vertical-align: middle;
}

.jobTable {
    width: 100%;

    th.subjobColumn {
    }

    th.runColumn {
        width: 50px;
    }

    td {
        padding: $unit / 2;
    }

    tbody tr:nth-child(odd) {
        background-color: $palette-grey-100;
    }

    .runColumn {
        text-align: center;
    }
}
